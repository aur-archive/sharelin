diff -ur ../0.2.6/src/CMakeLists.txt src/CMakeLists.txt
--- ../0.2.6/src/CMakeLists.txt	2011-12-11 00:09:34.000000000 +0300
+++ src/CMakeLists.txt	2012-08-16 20:30:24.000000000 +0400
@@ -166,5 +166,6 @@
 		${Boost_FILESYSTEM_LIBRARY} 
 		${Boost_SYSTEM_LIBRARY} 
 		${ZLIB_LIBRARIES}
+		pthread
 		)
 
diff -ur ../0.2.6/src/app.hpp src/app.hpp
--- ../0.2.6/src/app.hpp	2011-12-11 00:09:34.000000000 +0300
+++ src/app.hpp	2012-08-16 18:34:41.000000000 +0400
@@ -23,6 +23,7 @@
 #include <memory>
 
 #include <boost/shared_ptr.hpp>
+#include <boost/scoped_ptr.hpp>
 #include <boost/noncopyable.hpp>
 
 #include "io.hpp"
diff -ur ../0.2.6/src/arrivalcache.cpp src/arrivalcache.cpp
--- ../0.2.6/src/arrivalcache.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/arrivalcache.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -80,10 +80,10 @@
 bool ArrivalCache::OnCompleted(const ArrivalCache::Packet& pk, g2::Packet& g2pk)
 {
 	std::size_t size = 0;
-	foreach(ByteVector* p, pk.parts) size += p->size();
+	BOOST_FOREACH(ByteVector* p, pk.parts) size += p->size();
 
 	zbuf_.clear();
-	foreach(ByteVector* p, pk.parts) zbuf_.append(p->data(), p->size());
+	BOOST_FOREACH(ByteVector* p, pk.parts) zbuf_.append(p->data(), p->size());
 
 	if(pk.header.deflate)
 	{
diff -ur ../0.2.6/src/common/foreach.hpp src/common/foreach.hpp
--- ../0.2.6/src/common/foreach.hpp	2011-12-11 00:09:34.000000000 +0300
+++ src/common/foreach.hpp	2012-08-16 20:55:48.000000000 +0400
@@ -21,7 +21,5 @@
 
 #include <boost/foreach.hpp>
 
-#define foreach BOOST_FOREACH
-
 #endif //FOREACH_HPP
 
diff -ur ../0.2.6/src/defaultreactor.cpp src/defaultreactor.cpp
--- ../0.2.6/src/defaultreactor.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/defaultreactor.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -476,7 +476,7 @@
 
 	std::vector<FileRangeEx> ranges;
 	pdl->GetFileMap()->Dump(std::back_inserter(ranges));
-	foreach(FileRangeEx r, ranges)
+	BOOST_FOREACH(FileRangeEx r, ranges)
 	{
 		uint percent = 100 * double(double(r.length()) / inf.size);
 		Put("chunk_size", percent);
@@ -492,7 +492,7 @@
 	}
 
 	std::map<Integrity::Type, std::pair<uint, file_offset_t> > table;
-	foreach(FileRangeEx r, ranges)
+	BOOST_FOREACH(FileRangeEx r, ranges)
 	{
 		table[r.Status()].first++;
 		table[r.Status()].second += r.length();
@@ -514,7 +514,7 @@
 	std::vector<SourceHostEx> sources;
 	pdl->CopySources(std::back_inserter(sources));
 	uint nsource = 0;
-	foreach(const SourceHostEx& host, sources)
+	BOOST_FOREACH(const SourceHostEx& host, sources)
 	{
 		++nsource;
 		Put("source_number", nsource);
@@ -682,7 +682,7 @@
 	if(CurrentQuery().Has(Ui::Tags::purge)) app::history()->ClearDownloads();
 
 	Put("dlhist_total_files", app::history()->GetDownloads().size());
-	foreach(const History::Download& d, app::history()->GetDownloads())
+	BOOST_FOREACH(const History::Download& d, app::history()->GetDownloads())
 	{
 		Put("dlhist_name", Ui::AdaptString(FileSystem::FileName(d.path)));
 		Put("dlhist_type", Ui::FileType(d.path));
@@ -696,7 +696,7 @@
 
 	Put("uplhist_total_files", app::history()->GetUploads().size());
 	file_offset_t sz = 0;
-	foreach(const History::Upload& u, app::history()->GetUploads())
+	BOOST_FOREACH(const History::Upload& u, app::history()->GetUploads())
 	{
 		sz += u.transferred;
 
@@ -769,7 +769,7 @@
 	std::vector< DownloaderPtr > downloaders;
 	pdl->Dump(std::back_inserter(downloaders));
 
-	foreach(DownloaderPtr pDlr, downloaders)
+	BOOST_FOREACH(DownloaderPtr pDlr, downloaders)
 	{
 		tpl.Put("dlr_address", pDlr->HostInfo()->endpoint.toString());
 		tpl.Put("dlr_pushed", pDlr->Pushed());
@@ -836,7 +836,7 @@
 	FileSystem::ScanDirectory(app::settings()->general.complete, std::back_inserter(paths), FileSystem::REGULAR_FILE, FileSystem::NOT_FOLLOW);
 
 	unsigned n = 0;
-	foreach(const std::string& s, paths)
+	BOOST_FOREACH(const std::string& s, paths)
 	{
 		++n;
 		Put("name", Ui::AdaptString(FileSystem::FileName(s)));
@@ -858,7 +858,7 @@
 	Put(telnetPageSize, p->telnet.pageSize);
 	
 	std::string s;
-	foreach(IpSegment seg, p->general.uisegments)
+	BOOST_FOREACH(IpSegment seg, p->general.uisegments)
 	{
 		s += seg.first().toString();
 		if(seg.first() != seg.last())
@@ -881,7 +881,7 @@
 	Put("max_bw_out_kb", p->net.maxBwOut / 1024);
 	
 	s.clear();
-	foreach(const std::string& path, p->share.folders)
+	BOOST_FOREACH(const std::string& path, p->share.folders)
 		s += path + "; ";
 	Put(Settings::Options::share, s);
 	
@@ -914,7 +914,7 @@
 
 	std::reverse(lines.begin(), lines.end());
 
-	foreach(const std::string& msg, lines)
+	BOOST_FOREACH(const std::string& msg, lines)
 	{
 		std::stringstream ss(msg);
 		int level;
@@ -969,7 +969,7 @@
 		Put("criteria", scrit.str());
 
 		std::string exts;
-		foreach(const std::string& str, crit.extensions) exts += str + " ";
+		BOOST_FOREACH(const std::string& str, crit.extensions) exts += str + " ";
 		Put("extensions", exts);
 
 		Put("hits", s.count());
@@ -986,7 +986,7 @@
 	typedef std::vector < NodePtr > Hubs;
 	Hubs hubs;
 	app::g2net()->CopyHubs(std::back_inserter(hubs));
-	foreach(NodePtr p, hubs)
+	BOOST_FOREACH(NodePtr p, hubs)
 	{
 		Put("h_num", ++counter);
 		Put("h_address", p->info().endpoint.toString());
@@ -1001,7 +1001,7 @@
 	Handshakes handshakes;
 	app::g2net()->CopyHandshakes(std::back_inserter(handshakes));
 	counter = 0;
-	foreach(G2Connector::Ptr p, handshakes)
+	BOOST_FOREACH(G2Connector::Ptr p, handshakes)
 	{
 		Put("hs_num", ++counter);
 		Put("hs_address", p->endpoint().toString());
diff -ur ../0.2.6/src/directorywalk.cpp src/directorywalk.cpp
--- ../0.2.6/src/directorywalk.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/directorywalk.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -27,7 +27,7 @@
 
 void DirectoryWalk::work()
 {
-	foreach(const std::string& f, folders_)
+	BOOST_FOREACH(const std::string& f, folders_)
 	{
 		try 
 		{ 
diff -ur ../0.2.6/src/download.cpp src/download.cpp
--- ../0.2.6/src/download.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/download.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -447,13 +447,13 @@
 		std::vector<DownloaderPtr> ptrs;
 		ptrs.reserve(downloaders_.size());
 		std::copy(downloaders_.begin(), downloaders_.end(), std::back_inserter(ptrs));
-		foreach(DownloaderPtr p, ptrs) p->OnTimer( now );
+		BOOST_FOREACH(DownloaderPtr p, ptrs) p->OnTimer( now );
 
 		assert(searcher_.attached());
 		std::vector<srch::Result> results;
 		searcher_.dumpResults(std::back_inserter(results));
 		searcher_.clear();
-		foreach(const srch::Result& r, results)
+		BOOST_FOREACH(const srch::Result& r, results)
 			AddSource(r.host);
 
 		if(moment_ != app::now())
@@ -630,7 +630,7 @@
 uint Download::AvrRate() const
 {
 	uint rate = 0;
-	foreach(DownloaderPtr p, downloaders_)
+	BOOST_FOREACH(DownloaderPtr p, downloaders_)
 		rate += p->AvrRate();
 
 	return rate;
@@ -677,7 +677,7 @@
 
 void Download::CloseDownloaders()
 {
-	foreach(DownloaderPtr p, downloaders_)
+	BOOST_FOREACH(DownloaderPtr p, downloaders_)
 		p->Close();
 	downloaders_.clear();
 }
diff -ur ../0.2.6/src/downloadmanager.cpp src/downloadmanager.cpp
--- ../0.2.6/src/downloadmanager.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/downloadmanager.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -194,7 +194,7 @@
 DownloadPtr DownloadManager::Get(Id id)
 {
 	DownloadPtr p;
-	foreach(DownloadPtr p, downloads_)
+	BOOST_FOREACH(DownloadPtr p, downloads_)
 		if(p->GetFileInfo()->partial == id) return p;
 
 	throw std::runtime_error("Bad Id");
@@ -253,7 +253,7 @@
 
 void DownloadManager::Shutdown()
 {
-	foreach(DownloadPtr p, downloads_) p->Stop();
+	BOOST_FOREACH(DownloadPtr p, downloads_) p->Stop();
 	downloads_.clear();
 }
 
diff -ur ../0.2.6/src/g2node_impl.cpp src/g2node_impl.cpp
--- ../0.2.6/src/g2node_impl.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/g2node_impl.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -165,7 +165,7 @@
 	}
 
 	//sending QHT
-	foreach (const g2::Packet& pk, qhtPackets) send(pk);
+	BOOST_FOREACH (const g2::Packet& pk, qhtPackets) send(pk);
 }
 
 
diff -ur ../0.2.6/src/packethandler.cpp src/packethandler.cpp
--- ../0.2.6/src/packethandler.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/packethandler.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -171,7 +171,7 @@
 
 		std::vector <G2Node::Ptr> hubs;
 		app::g2net()->CopyHubs(std::back_inserter(hubs));
-		foreach (G2Node::Ptr h, hubs)
+		BOOST_FOREACH (G2Node::Ptr h, hubs)
 		{
 			const ip::Endpoint ep = h->info().endpoint;
 			w.Begin(g2::NH);
diff -ur ../0.2.6/src/security.cpp src/security.cpp
--- ../0.2.6/src/security.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/security.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -31,7 +31,7 @@
 
 bool Security::AgentRestricted(const std::string& agent) const
 {
-	foreach(const std::string& s, restrictedAgents_)
+	BOOST_FOREACH(const std::string& s, restrictedAgents_)
 		if(icontains(agent, s)) return true;
 	return false;
 }
diff -ur ../0.2.6/src/settings/manager.cpp src/settings/manager.cpp
--- ../0.2.6/src/settings/manager.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/settings/manager.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -158,7 +158,7 @@
 
 	//share
 	f << Options::share << " = ";
-	foreach(const std::string& folder, pStorage_->share.folders)
+	BOOST_FOREACH(const std::string& folder, pStorage_->share.folders)
 		f << folder << ";";
 	f << std::endl;
 
@@ -176,7 +176,7 @@
 
 	//remote ranges
 	f << Options::remoteRanges << " = ";
-	foreach(IpSegment s, pStorage_->general.uisegments)
+	BOOST_FOREACH(IpSegment s, pStorage_->general.uisegments)
 	{
 		if(s.first() == s.last())
 			f << s.first();
@@ -220,7 +220,7 @@
 	pStorage_->share.folders.clear();
 	std::vector<std::string> folders;
 	split(folders, value, is_any_of(";"));
-	foreach(std::string f, folders)
+	BOOST_FOREACH(std::string f, folders)
 	{
 		trim(f);
 		if(f.empty()) continue;
diff -ur ../0.2.6/src/share/kwcache.hpp src/share/kwcache.hpp
--- ../0.2.6/src/share/kwcache.hpp	2011-12-11 00:09:34.000000000 +0300
+++ src/share/kwcache.hpp	2012-08-16 20:42:27.000000000 +0400
@@ -79,7 +79,7 @@
 		std::copy(begin, end, std::inserter(i->second, i->second.begin()));
 
 		if(i->second.empty()) remove(key);
-		else foreach(const std::string& kw, i->second) cache_[kw].insert(key);
+		else BOOST_FOREACH(const std::string& kw, i->second) cache_[kw].insert(key);
 	}
 
 	void remove(const KeyType& key)
@@ -87,7 +87,7 @@
 		typename Table::iterator i = table_.find(key);
 		if(i == table_.end()) return;
 
-		foreach(const std::string& kw, i->second)
+		BOOST_FOREACH(const std::string& kw, i->second)
 		{
 			typename Cache::iterator ikw = cache_.find(kw);
 			assert(ikw != cache_.end());
diff -ur ../0.2.6/src/share/localqht.cpp src/share/localqht.cpp
--- ../0.2.6/src/share/localqht.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/share/localqht.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -37,7 +37,7 @@
 
 	std::set<std::string> kws;
 	G2::ExtractKeywords(f.name, std::inserter(kws, kws.begin()));
-	foreach(const std::string& kw, kws) 
+	BOOST_FOREACH(const std::string& kw, kws) 
 		qht_.Add(kw);
 }
 
diff -ur ../0.2.6/src/share/manager.cpp src/share/manager.cpp
--- ../0.2.6/src/share/manager.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/share/manager.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -92,7 +92,7 @@
 
 	verb2::shr << "Looking for something to hash" << std::endl;
 	const std::time_t now = util::now();
-	foreach (WeakInfo w, v)
+	BOOST_FOREACH (WeakInfo w, v)
 	{
 		if(boost::starts_with(w->path, app::settings()->general.incomplete))
 			continue;
@@ -112,7 +112,7 @@
 
 		verb2::shr << "Rebuilding qht" << std::endl;
 		qht_.clear();
-		foreach (WeakInfo w, v)
+		BOOST_FOREACH (WeakInfo w, v)
 			qht_.update(*w);
 	}
 
diff -ur ../0.2.6/src/share/syncer.cpp src/share/syncer.cpp
--- ../0.2.6/src/share/syncer.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/share/syncer.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -37,7 +37,7 @@
 	std::vector <WeakInfo> w;
 	storage_.dump(std::back_inserter(w));
 	std::set <std::string> storing;
-	foreach(WeakInfo i, w) 
+	BOOST_FOREACH(WeakInfo i, w) 
 		if (!i->partial)
 			storing.insert(i->path);
 
@@ -49,9 +49,9 @@
 	std::set_symmetric_difference(common.begin(), common.end(), storing.begin(), storing.end(), std::inserter(removed, removed.begin()));
 	std::set_symmetric_difference(common.begin(), common.end(), found.begin(), found.end(), std::inserter(created, created.begin()));
 
-	foreach (const std::string& s, removed) storage_.remove(storage_.find<tag::path>(s));
+	BOOST_FOREACH (const std::string& s, removed) storage_.remove(storage_.find<tag::path>(s));
 
-	foreach (const std::string& s, created) storage_.add(s);
+	BOOST_FOREACH (const std::string& s, created) storage_.add(s);
 }
 
 } //namespace share
diff -ur ../0.2.6/src/telnetclient.cpp src/telnetclient.cpp
--- ../0.2.6/src/telnetclient.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/telnetclient.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -69,7 +69,7 @@
 	const ip::Address addr = GetEndpoint().address;
 
 	bool found = false;
-	foreach(IpSegment s, app::settings()->general.uisegments)
+	BOOST_FOREACH(IpSegment s, app::settings()->general.uisegments)
 		found |= s.contains(addr);
 
 	if(!found)
diff -ur ../0.2.6/src/uiclient.hpp src/uiclient.hpp
--- ../0.2.6/src/uiclient.hpp	2011-12-11 00:09:34.000000000 +0300
+++ src/uiclient.hpp	2012-08-16 22:27:14.000000000 +0400
@@ -27,6 +27,7 @@
 class Client
 {
 public:
+	virtual ~Client() {}
 	virtual ba::ip::tcp::socket& Socket() = 0;
 	virtual void Start() = 0;
 	virtual void stop() = 0;
diff -ur ../0.2.6/src/uireactor.hpp src/uireactor.hpp
--- ../0.2.6/src/uireactor.hpp	2011-12-11 00:09:34.000000000 +0300
+++ src/uireactor.hpp	2012-08-16 22:28:35.000000000 +0400
@@ -34,6 +34,7 @@
 {
 public:
 	Reactor(): pTpl_(0) {}
+	virtual ~Reactor() {}
 	void Root(const std::string& root);
 	std::string Root() const;
 	void ProcessQuery(const Query&, std::string&);
diff -ur ../0.2.6/src/uiserver.cpp src/uiserver.cpp
--- ../0.2.6/src/uiserver.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/uiserver.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -101,7 +101,7 @@
 {
 	acceptor_.cancel();
 
-	foreach(ClientPtr p, clients_)
+	BOOST_FOREACH(ClientPtr p, clients_)
 		p->stop();
 
 	clients_.clear();
@@ -116,7 +116,7 @@
 		Ip::Address addr = p->GetEndpoint().address;
 
 		bool found = false;
-		foreach(IpSegment s, System::GetSettings()->general.uisegments)
+		BOOST_FOREACH(IpSegment s, System::GetSettings()->general.uisegments)
 			found |= s.Contains(addr);
 
 		if(found)
diff -ur ../0.2.6/src/uploadmanager.cpp src/uploadmanager.cpp
--- ../0.2.6/src/uploadmanager.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/uploadmanager.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -31,7 +31,7 @@
 
 void UploadManager::Shutdown()
 {
-	foreach(Uploader::Ptr p, uploaders_)
+	BOOST_FOREACH(Uploader::Ptr p, uploaders_)
 		p->Close();
 	uploaders_.clear();
 }
@@ -43,7 +43,7 @@
 void UploadManager::OnTimer( std::time_t now )
 {
 	std::vector< Uploader::Ptr > v = uploaders_;
-	foreach( Uploader::Ptr p, v )
+	BOOST_FOREACH( Uploader::Ptr p, v )
 		p->OnTimer( now );
 }
 
@@ -64,7 +64,7 @@
 	verb1::upl << "Got upload request from " << endpoint << std::endl;
 
 	uint count = 0;
-	foreach( Uploader::Ptr p, uploaders_ )
+	BOOST_FOREACH( Uploader::Ptr p, uploaders_ )
 		if(endpoint == p->Address()) ++count;
 
 	if( count >= app::settings()->net.uploadsPerHost ) 
diff -ur ../0.2.6/src/webuiclient.cpp src/webuiclient.cpp
--- ../0.2.6/src/webuiclient.cpp	2011-12-11 00:09:34.000000000 +0300
+++ src/webuiclient.cpp	2012-08-16 20:42:27.000000000 +0400
@@ -74,7 +74,7 @@
 	const ip::Address addr = GetEndpoint().address;
 
 	bool found = false;
-	foreach(IpSegment s, app::settings()->general.uisegments)
+	BOOST_FOREACH(IpSegment s, app::settings()->general.uisegments)
 		found |= s.contains(addr);
 
 	if(!found)
